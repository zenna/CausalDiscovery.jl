 
(program
  (= GRID_SIZE (list 300 110))
  (= background "white")
  (object ObjType1  (map (--> pos (Cell pos  "mpuyei" )) (rect (Position -9 -4) (Position 0 5))))
  (object ObjType2 (: field1 Int) (map (--> pos (Cell pos  "gold" )) (rect (Position -9 -4) (Position 0 5))))
  (object ObjType3  (map (--> pos (Cell pos  "darkblue" )) (rect (Position -9 -4) (Position 0 5))))
  (object ObjType4  (map (--> pos (Cell pos  "orange" )) (rect (Position -9 -4) (Position 0 5))))
  (object ObjType5 (: field1 Int) (map (--> pos (Cell pos  "pink" )) (rect (Position -9 -4) (Position 0 5))))
  (object ObjType6 (: field1 Int) (map (--> pos (Cell pos  "red" )) (rect (Position -9 -4) (Position 0 5))))
  
  (: addedObjType1List (List ObjType1))
  (: addedObjType2List (List ObjType2))
  (: obj49 ObjType3)
  (: obj50 ObjType4)
  
  (: addedObjType3List (List ObjType3))
  (: addedObjType4List (List ObjType4))
  (: addedObjType5List (List ObjType5))
  (: addedObjType6List (List ObjType6))
  
  (= addedObjType1List (initnext (list (ObjType1  (Position 39 84)) (ObjType1  (Position 249 74)) (ObjType1  (Position 189 94)) (ObjType1  (Position 169 84)) (ObjType1  (Position 79 94)) (ObjType1  (Position 139 94)) (ObjType1  (Position 179 74)) (ObjType1  (Position 179 84)) (ObjType1  (Position 49 84)) (ObjType1  (Position 189 74)) (ObjType1  (Position 39 94)) (ObjType1  (Position 129 94)) (ObjType1  (Position 169 74)) (ObjType1  (Position 149 74)) (ObjType1  (Position 259 94)) (ObjType1  (Position 159 74)) (ObjType1  (Position 139 74)) (ObjType1  (Position 279 84)) (ObjType1  (Position 269 94)) (ObjType1  (Position 269 74)) (ObjType1  (Position 189 84)) (ObjType1  (Position 149 84)) (ObjType1  (Position 59 84)) (ObjType1  (Position 199 84)) (ObjType1  (Position 199 94)) (ObjType1  (Position 9 24)) (ObjType1  (Position 129 84)) (ObjType1  (Position 259 84)) (ObjType1  (Position 49 74)) (ObjType1  (Position 9 14)) (ObjType1  (Position 249 94)) (ObjType1  (Position 29 24)) (ObjType1  (Position 279 94)) (ObjType1  (Position 69 74)) (ObjType1  (Position 69 84)) (ObjType1  (Position 19 14)) (ObjType1  (Position 29 14)) (ObjType1  (Position 159 84)) (ObjType1  (Position 59 74)) (ObjType1  (Position 139 84)) (ObjType1  (Position 249 84)) (ObjType1  (Position 239 84)) (ObjType1  (Position 239 94)) (ObjType1  (Position 79 84)) (ObjType1  (Position 269 84)) (ObjType1  (Position 19 24)) (ObjType1  (Position 259 74))) (prev addedObjType1List)))
  (= addedObjType2List (initnext (list (ObjType2 6 (Position 9 4))) (prev addedObjType2List)))
  (= obj49 (initnext (ObjType3  (Position 169 104)) (prev obj49)))
  (= obj50 (initnext (ObjType4  (Position 9 4)) (prev obj50)))
  
  (= addedObjType3List (initnext (list) (prev addedObjType3List)))
  (= addedObjType4List (initnext (list) (prev addedObjType4List)))
  (= addedObjType5List (initnext (list) (prev addedObjType5List)))
  (= addedObjType6List (initnext (list) (prev addedObjType6List)))


  (: arrow Position)
  (= arrow (initnext (Position 0 0) (prev arrow)))
  (on true
(= arrow (if left then (Position -10 0) else (if right then (Position 10 0) else (if up then (Position 0 -10) else (if down then (Position 0 10) else (Position 0 0)))))))

  (: time Int)
  (= time (initnext 0 (+ time 1)))

  (on (& (== (% (prev time) 16) 15) (<= (distance (prev obj50) (prev addedObjType2List)) 20))
(= obj50 (removeObj (prev obj50))))
  (on true
(= addedObjType2List (updateObj addedObjType2List (--> obj (moveNoCollisionColor (prev obj) 6 0 "darkgray")) (--> obj (& true (== (.. obj field1) 3))))))
  (on true
(= addedObjType2List (updateObj addedObjType2List (--> obj (moveNoCollisionColor (prev obj) -6 0 "darkgray")) (--> obj (& true (in (.. obj field1) (list 1 13)))))))
  (on true
(= addedObjType2List (updateObj addedObjType2List (--> obj (moveNoCollisionColor (prev obj) 0 12 "darkgray")) (--> obj (& true (== (.. obj field1) 2))))))
  (on true
(= addedObjType2List (removeObj addedObjType2List (--> obj (intersects (map (--> obj (move (prev obj) 0 6)) (list (prev obj))) (prev addedObjType5List))))))
  (on (!= arrow (Position 0 0))
(= obj49 (moveNoCollisionColor (prev obj49) (.. arrow x) (.. arrow y) "darkgray")))
  (on true
(= addedObjType5List (updateObj addedObjType5List (--> obj (moveNoCollisionColor (prev obj) 0 -10 "darkgray")) (--> obj (& true (== (.. obj field1) 1))))))
  (on true
(= addedObjType5List (removeObj addedObjType5List (--> obj (| (in false (map (--> obj (isWithinBounds obj)) (map (--> obj (move (prev obj) 0 -10)) (list (prev obj))))) (intersects (map (--> obj (move (prev obj) 0 -10)) (list (prev obj))) (prev addedObjType1List)))))))
  (on true
(= addedObjType6List (updateObj addedObjType6List (--> obj (moveNoCollisionColor (prev obj) 0 5 "darkgray")) (--> obj (& true (== (.. obj field1) 1))))))
  (on true
(= addedObjType6List (removeObj addedObjType6List (--> obj (intersects (map (--> obj (move (prev obj) 0 5)) (list (prev obj))) (prev addedObjType1List))))))
  (on true
(= addedObjType1List (removeObj addedObjType1List (--> obj (| (| (in 1 (map (--> obj (.. obj field1)) (filter (--> obj (intersects (move (prev obj) -6 0) (list (prev obj)))) (prev addedObjType2List)))) (intersects (list (prev obj)) (map (--> obj (move (prev obj) 0 5)) (prev addedObjType6List)))) (intersects (list (prev obj)) (map (--> obj (move (prev obj) 0 -10)) (prev addedObjType5List))))))))
  (on true
(= addedObjType5List (updateObj addedObjType5List (--> obj (updateObj obj "field1" 1)) (--> obj true) )))
  (on true
(= addedObjType2List (updateObj addedObjType2List (--> obj (updateObj obj "field1" 5)) (--> obj (& (in false (map (--> obj (isWithinBounds obj)) (map (--> obj (move (prev obj) -6 0)) (list (prev obj))))) (intersects (list 6) (map (--> obj (.. obj field1)) (list (prev obj)))))) )))
  (on true
(= addedObjType2List (updateObj addedObjType2List (--> obj (updateObj obj "field1" 4)) (--> obj (& true (intersects (list 5) (map (--> obj (.. obj field1)) (list (prev obj)))))) )))
  (on true
(= addedObjType2List (updateObj addedObjType2List (--> obj (updateObj obj "field1" 3)) (--> obj (& (in false (map (--> obj (isOutsideBounds obj)) (map (--> obj (move (prev obj) 6 0)) (list (prev obj))))) (intersects (list 4) (map (--> obj (.. obj field1)) (list (prev obj)))))) )))
  (on true
(= addedObjType2List (updateObj addedObjType2List (--> obj (updateObj obj "field1" 5)) (--> obj (& (in true (map (--> obj (isWithinBounds obj)) (map (--> obj (move (prev obj) 6 0)) (list (prev obj))))) (intersects (list 3) (map (--> obj (.. obj field1)) (list (prev obj)))))) )))
  (on true
(= addedObjType2List (updateObj addedObjType2List (--> obj (updateObj obj "field1" 8)) (--> obj (& (in false (map (--> obj (isWithinBounds obj)) (map (--> obj (move (prev obj) 6 0)) (list (prev obj))))) (intersects (list 3) (map (--> obj (.. obj field1)) (list (prev obj)))))) )))
  (on true
(= addedObjType2List (updateObj addedObjType2List (--> obj (updateObj obj "field1" 4)) (--> obj (& true (intersects (list 8) (map (--> obj (.. obj field1)) (list (prev obj)))))) )))
  (on true
(= addedObjType2List (updateObj addedObjType2List (--> obj (updateObj obj "field1" 2)) (--> obj (& (in true (map (--> obj (isOutsideBounds obj)) (map (--> obj (move (prev obj) 6 0)) (list (prev obj))))) (intersects (list 4) (map (--> obj (.. obj field1)) (list (prev obj)))))) )))
  (on true
(= addedObjType2List (updateObj addedObjType2List (--> obj (updateObj obj "field1" 10)) (--> obj (& (in false (map (--> obj (isWithinBounds obj)) (map (--> obj (move (prev obj) 6 0)) (list (prev obj))))) (intersects (list 2) (map (--> obj (.. obj field1)) (list (prev obj)))))) )))
  (on true
(= addedObjType2List (updateObj addedObjType2List (--> obj (updateObj obj "field1" 9)) (--> obj (& true (intersects (list 10) (map (--> obj (.. obj field1)) (list (prev obj)))))) )))
  (on true
(= addedObjType2List (updateObj addedObjType2List (--> obj (updateObj obj "field1" 1)) (--> obj (& true (intersects (list 9) (map (--> obj (.. obj field1)) (list (prev obj)))))) )))
  (on true
(= addedObjType2List (updateObj addedObjType2List (--> obj (updateObj obj "field1" 11)) (--> obj (& (in true (map (--> obj (isWithinBounds obj)) (map (--> obj (move (prev obj) -12 0)) (list (prev obj))))) (intersects (list 1) (map (--> obj (.. obj field1)) (list (prev obj)))))) )))
  (on true
(= addedObjType2List (updateObj addedObjType2List (--> obj (updateObj obj "field1" 6)) (--> obj (& true (intersects (list 11) (map (--> obj (.. obj field1)) (list (prev obj)))))) )))
  (on true
(= addedObjType2List (updateObj addedObjType2List (--> obj (updateObj obj "field1" 1)) (--> obj (& (in true (map (--> obj (isWithinBounds obj)) (map (--> obj (move (prev obj) -6 0)) (list (prev obj))))) (intersects (list 6) (map (--> obj (.. obj field1)) (list (prev obj)))))) )))
  (on true
(= addedObjType2List (updateObj addedObjType2List (--> obj (updateObj obj "field1" 12)) (--> obj (& (in false (map (--> obj (isWithinBounds obj)) (map (--> obj (move (prev obj) -12 0)) (list (prev obj))))) (intersects (list 1) (map (--> obj (.. obj field1)) (list (prev obj)))))) )))
  (on true
(= addedObjType2List (updateObj addedObjType2List (--> obj (updateObj obj "field1" 7)) (--> obj (& true (intersects (list 12) (map (--> obj (.. obj field1)) (list (prev obj)))))) )))
  (on true
(= addedObjType2List (updateObj addedObjType2List (--> obj (updateObj obj "field1" 13)) (--> obj (& (in true (map (--> obj (isWithinBounds obj)) (map (--> obj (move (prev obj) 0 0)) (list (prev obj))))) (intersects (list 7) (map (--> obj (.. obj field1)) (list (prev obj)))))) )))
  (on true
(= addedObjType2List (updateObj addedObjType2List (--> obj (updateObj obj "field1" 14)) (--> obj (& true (intersects (list 13) (map (--> obj (.. obj field1)) (list (prev obj)))))) )))
  (on true
(= addedObjType2List (updateObj addedObjType2List (--> obj (updateObj obj "field1" 7)) (--> obj (& true (intersects (list 14) (map (--> obj (.. obj field1)) (list (prev obj)))))) )))
  (on true
(= addedObjType2List (updateObj addedObjType2List (--> obj (updateObj obj "field1" 2)) (--> obj (& (in true (map (--> obj (isOutsideBounds obj)) (map (--> obj (move (prev obj) -6 0)) (list (prev obj))))) (intersects (list 7) (map (--> obj (.. obj field1)) (list (prev obj)))))) )))
  (on true
(= addedObjType2List (updateObj addedObjType2List (--> obj (updateObj obj "field1" 5)) (--> obj (& (in true (map (--> obj (isWithinBounds obj)) (map (--> obj (move (prev obj) 6 0)) (list (prev obj))))) (intersects (list 2) (map (--> obj (.. obj field1)) (list (prev obj)))))) )))
  (on true
(= addedObjType6List (updateObj addedObjType6List (--> obj (updateObj obj "field1" 1)) (--> obj true) )))
  (on (== (% (prev time) 16) 15)
(let ((= addedObjType2List (addObj addedObjType2List (ObjType2 6  (Position 9 4)))))))
  (on (& (== (filter (--> obj (.. obj alive)) (prev addedObjType5List)) (list)) clicked)
(let ((= addedObjType5List (addObj addedObjType5List (ObjType5 2  (.. (prev obj49) origin)))))))
  (on (== (uniformChoice (list 1 2 3 4 5 6 7 8 9 10)) 1)
(= addedObjType6List (addObj addedObjType6List (ObjType6 2  (.. (uniformChoice (map (--> obj (.. (move obj (Position 6 0)) origin)) (prev addedObjType2List)) ) origin)))))
  (on (== (uniformChoice (list 1 2 3 4 5 6 7 8 9 10)) 1)
(= addedObjType6List (addObj addedObjType6List (ObjType6 2  (.. (uniformChoice (map (--> obj (.. (move obj (Position 0 0)) origin)) (prev addedObjType2List)) ) origin))))))
